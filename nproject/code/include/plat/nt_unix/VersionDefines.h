//******************************************************************************
//	VersionDefines.h				版本: 1.00.0000		日期: 2006-12-14 10:50
//	--------------------------------------------------------------------------
//	版本相关定义头文件
//		<1>	数据库相关表、字段和序列的宏定义
//		<2>	使用枚举定义任务状态、版本切换和无效句柄等常量
//	--------------------------------------------------------------------------
//	Copyright (C) 2006  - All Rights Reserved
//******************************************************************************
//	Revision History : 
//		<2006-12-14> WonKe : 
//			<1>	将声明从原来的头文件中分离出来使其他程序可以直接使用这些定义
//******************************************************************************

#ifndef __SG_PROJECT_VERSION_MANAGER_MACRO_AND_CONSTANT_VARIANT_DECLARE_HEADER__
#define __SG_PROJECT_VERSION_MANAGER_MACRO_AND_CONSTANT_VARIANT_DECLARE_HEADER__

#pragma once

//==============================================================================
//  概述：
//      相关字段的名称定义
//
//	备注：
//		更多字段和表名的定义参见 sys_tabledef.h
//==============================================================================
#define SG_VER_FIELD_CREATEUSER             "CREATEUSER" 		//	VARCHAR2(30)
#define SG_VER_FIELD_AUDITUSER              "AUDITUSER" 		//	VARCHAR2(30)
#define SG_VER_FIELD_ENDUSER				"ENDUSER" 			//	VARCHAR2(30)
#define SG_VER_FIELD_CREATETIME             "CREATETIME" 		//	DATE
#define SG_VER_FIELD_AUDITTIME              "AUDITTIME"			//	DATE
#define SG_VER_FIELD_ENDTIME                "ENDTIME" 			//	DATE
#define SG_VER_FIELD_REASON					"REASON"			//	VARCHAR(255)
#define SG_VER_FIELD_REMARK					"REMARK"			//	VARCHAR(255)

//==============================================================================
//  概述：
//		序列的名称
//==============================================================================
#define SG_SEQ_VERSION_MANAGER				"B_MISSION_SEQ"		//	

//==============================================================================
//  概述：
//		相关系统消息的定义
//==============================================================================
#if defined( _WIN32 ) || defined( WIN32 )
#	define WM_SCHEME_SWITCH ( WM_USER + 0x0010 )	//	子方案切换的消息
#	define WM_SCHEME_DIFFER ( WM_USER + 0x0011 )	//	子方案比较的消息
#	define WM_SCHEME_SYNCHO ( WM_USER + 0x0012 )	//	同步邮件处理消息
#endif

//==============================================================================
//	概述：
//		系统大版本编号的枚举定义
//==============================================================================
enum ESystemVersionCode
{
	svcVersionBase		=	   0 ,	//	运行版
	svcVersionEdit		=	   1 ,	//	编辑版
	svcVersionPlan		=	   2 ,	//	规划版
};

//==============================================================================
//	概述：
//		版本相关的常量定义
//==============================================================================
enum EProjectMissionStatus
{
	vsMinimal			=	   0 ,	//	最小可用状态值
	vsDefault			=	   0 ,	//	默认状态

	vsVirgin			=	   0 ,	//	可编辑态
	vsReadonly			=	   1 ,	//	只读，对检查点有效
	vsAudit				=	   2 ,	//	已经审核过
	vsCommit			=	   3 ,	//	提交结案
	vsRollback			=	   4 ,	//	回滚结案

	vsMaximal			=	 998 ,	//	最大可用状态值
	vsInvalid			=	 999 ,	//	无效状态
};

//==============================================================================
//	概述：
//		客户端申请数据的状态定义
//==============================================================================
enum EClientMissionStatus
{
	cvsMinimal			=	   0 ,	//	最小可用状态值
	cvsDefault			=	   0 ,	//	默认状态

	cvsRequestRunVer    =	   0 ,	//	申请运行版本的数据
 	cvsSameVerNextChkPt	=	   1 ,	//	同一版本中下一检查点的增量数据
 	cvsSameVerPrevChkPt	=	   2 ,	//	同一版本中上一检查点的增量数据
	cvsDiffVerChkPt		=	   3 ,	//	不同版本间的增量数据
	cvsRunToEdit		=	   4 ,	//	运行态到编辑态中的增量数据

	cvsDirect			=	 997,	//	全版本数据的直接切换

	cvsMaximal			=	 998 ,	//	最大可用状态值
	cvsInvalid			=	 999 ,	//	无效状态
};

//==============================================================================
//	概述：
//		版本相关的常量定义
//==============================================================================
enum ECommonConstValue
{
	ccvProjectInvalid	=	   0 ,	//	无效的工程编号
	ccvMissionInvalid	=	   0 ,	//	无效的任务编号
	ccvSectionInvalid	=	   0 ,	//	无效的检查点号
};

//==================================================================================================
//	概述：
//		版本相关的常量定义
//==================================================================================================
enum EObjectOperatorRight
{
	oorSelect		= 0x00000001 ,	//	查询
	oorInsert		= 0x00000002 ,	//	新增
	oorUpdate		= 0x00000004 ,	//	编辑
	oorDelete		= 0x00000008 ,	//	删除
	
	oorGraphs		= 0x00000100 ,	//	图形
	oorAttrib		= 0x00000200 ,	//	属性
	
	oorModify		= 0x0000000F ,	//	编辑掩码
	oorTarget		= 0x00000F00 ,	//	目标掩码
};

//==================================================================================================
//	说明：
//		<1> 启动编辑即可进行编辑的方案管理器必须置位 [ 00010000 00000000 00000000 00000000 ]
//==================================================================================================
enum ESchemeManagerImplement
{
	smiAutoCreate	= 0x70000000 ,	//	自动根据 AppEnv 找到合适的版本管理器

	smiBaseViewer	= 0x00000000 ,	//	运行版的版本管理器（只读，编辑需要切换到编辑版）
	smiBaseUpdate	= 0x10000000 ,	//	运行版的版本管理器（读写，启动编辑即可进行编辑）

	smiEditModify	= 0x00000001 ,	//	编辑版的版本管理器（仅进行编辑版的编辑操作）
	smiPlanModify	= 0x00000002 ,	//	规划版的版本管理器（仅进行规划版的编辑操作）

	smiTimeViewer	= 0x01000000 ,	//	时态版的版本管理器（只读，不可以进行版本的切换）
	smiFileUpdate	= 0x12000000 ,	//	离线版的版本管理器（读写，启动编辑即可进行编辑）

	smiLiteUpdate	= 0x1F000000 ,	//	轻量级的版本管理器（读写，启动编辑即可进行编辑）
};

#endif//__SG_PROJECT_VERSION_MANAGER_MACRO_AND_CONSTANT_VARIANT_DECLARE_HEADER__